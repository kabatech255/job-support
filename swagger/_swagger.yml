---
openapi: 3.0.2
info:
  description:
    "主な機能：\
    \     議事録の記録 \
    スケジュール管理・共有 \
    ファイル共有 \
    チャット \
    Todo管理等 \
    \ key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "業務支援システム"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:8080/api
    description: Laravelのローカルserver
tags:
  - name: "user"
    description: "employees"
  - name: "admin"
    description: "system administrator"
  - name: "chat_room"
    description: "shat room"
paths:
  /user/current:
    get:
      tags:
        - "user"
      description: "return user by userId"
      responses:
        "200":
          description: "successfull operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: "NG"
  /login:
    post:
      tags:
        - "user"
      description: "return auth by login_id and password"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
      responses:
        "200":
          description: "successfull operation"
          headers:
            Set-Cookie:
              description: laravel_session
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: "Invalid login_id or password supplied"
  /logout:
    post:
      tags:
        - "user"
      description: "return logout by login_id and password"
      responses:
        "200":
          description: "successfull operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: "NG"
  /admin/current:
    get:
      tags:
        - "admin"
      description: "return current admin"
      responses:
        "200":
          description: "successfull operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/admin"
        "400":
          description: "NG"
  /admin/login:
    post:
      tags:
        - admin
      description: "return admin auth by login_id and password"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
      responses:
        "200":
          description: "successfull operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/admin"
        "400":
          description: "Invalid login_id or password supplied"
  /admin/logout:
    post:
      tags:
        - "admin"
      description: "return logout by login_id and password"
      responses:
        "200":
          description: "successfull operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: "NG"
  /author/chat_room:
    get:
      security:
        - cookieAuth: []
      tags:
        - "chat_room"
      description: "chat rooms user joined"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/chat_room"
        "400":
          description: NG

components:
  securitySchemes:
    cookieAuth:
      description: Session Auth
      type: apiKey
      in: cookie
      name: _session
  schemas:
    login_body:
      title: login_body
      description: ログインIDとパスワードのフォーム
      required:
        - login_id
        - password
      type: object
      properties:
        login_id:
          type: string
          example: 'testman1'
        password:
          type: string
          format: password
          example: 'password'
    user:
      title: User
      description: Userのスキーマ
      required:
        - id
        - full_name
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        full_name:
          type: string
          example: 'テスト 太郎'
        first_name:
          type: string
          example: '太郎'
        last_name:
          type: string
          example: 'テスト 太郎'
        file_path:
          type: string
          example: 'hoge/hoge/taro.jpg'
        created_at:
          type: string
          format: datetime
          example: '2021-12-31 12:00'
        updated_at:
          type: string
          format: datetime
          example: '2021-12-31 12:00'
    admin:
      title: Admin
      description: Adminのスキーマ
      required:
        - id
        - full_name
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        full_name:
          type: string
          example: 'テスト 太郎'
        first_name:
          type: string
          example: '太郎'
        last_name:
          type: string
          example: 'テスト 太郎'
        created_at:
          type: string
          format: datetime
          example: '2021-12-31 12:00'
        updated_at:
          type: string
          format: datetime
          example: '2021-12-31 12:00'
    chat_room:
      title: ChatRoom
      description: チャットルーム
      required:
        - id
        - name
        - members
        - messages
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/user'
        messages:
          type: array
          items:
            $ref: "#/components/schemas/chat_message"
        created_at:
          type: string
        updated_at:
          type: string
    chat_message:
      title: ChatMessage
      description: チャットメッセージ
      required:
        - id
        # - to
        - written_by
        - body
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        body:
          type: string
        written_by:
          $ref: '#/components/schemas/user'
        to:
          $ref: '#/components/schemas/user'
        images:
          type: array
          items:
            $ref: '#/components/schemas/chat_message_image'
        created_at:
          type: string
        updated_at:
          type: string
    chat_message_image:
      title: ChatImage
      description: チャット画像
      required:
        - id
        - file_path
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        chat_message_id:
          type: integer
          format: int64
        file_path:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
